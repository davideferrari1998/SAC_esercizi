swagger: "2.0"

info:
  version: "1.0"
  title: "Unimore Class"
  description: "Reserve your seat at UNIMORE"

host: "exam-16-09-21.appspot.com"
basePath: "/api/v1"

schemes:
  - https

paths:
  /clean:
    get:
      description: "Clean the database"
      operationId: "CleanDB"
      responses:
        200: 
          description: "Ok"
  /courses/{student}:
    parameters:
      - name: student
        in: path
        required: true
        description: "UUID of the student"
        type: string
        format: uuid
    post:
      description: "Reserve a seat for the specified courses"
      operationId: "SeatReservation"
      consumes:
        - application/json
      parameters:
        - in: body
          name: ReservationCourses
          required: True
          description: "List of the courses for which a seat is requested"
          schema:
            $ref: "#/definitions/ReservationCourses"
      responses:
        201:
          description: "Success. The returned value is relative to the only seats allocated for the corresponding request"
          schema:
            $ref: '#/definitions/ReservationOutput'
        400:
          description: "Generic error"
        409:
          description: "Conflict. The student has already a seat for the selected course."
        412:
          description: "Error. No more seats available."
    get:
      description: "Get the reservations for the student"
      operationId: "SeatsRecap"
      responses:
        200:
          description: "Success."
          schema:
            $ref: "#/definitions/ReservationOutput"
        404:
          description: "Generic error"

definitions:
  ReservationCourses:
    type: object
    required:
      - courses
    properties:
      courses:
        type: array
        items:
          type: string
          enum: ['A', 'B', 'C']
    example:
      courses:
        - 'A'
        - 'B'
  ReservationOutput:
    type: object
    required:
      - reservations
    properties:
      reservations:
        type: array
        items:
          type: object
          properties:
            course:
              type: string
              enum: ['A', 'B', 'C']
            seat:
              type: string
    example:
      reservations:
        - course: 'A'
          seat: 'A1'
        - course: 'B'
          seat: 'A1'